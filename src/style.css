:root{
    --mainBackground: #ebeffa;
    --boxBackground: #fafbff;
    --blue: #0164fc;
    --shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;
}
*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
header {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 30px;
    font-size: 36px;
    color: var(--blue);
}
body{
    background-color: var(--mainBackground);
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    flex-direction: column;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}
button{
    padding: 10px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 600;
    background-color: var(--boxBackground);
    transition: background-color 0.1s, color 0.1s;
    box-shadow: var(--shadow);
}
button:hover{
    color: var(--boxBackground);
    background-color: var(--blue);
}
#gameContainer{
    display: flex;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    width: 90%;
    gap: 30px;
    padding: 30px 0 30px 0;
    flex-wrap: wrap;
    background-color: var(--boxBackground);
    border-radius: 10px;
    box-shadow: var(--shadow);
    margin-bottom: 25px;
}
#announcerContainer{
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10px 0 10px 0;
    background-color: var(--boxBackground);
    border-radius: 10px;
    box-shadow: var(--shadow);
    width: 90%;
    gap: 20px;
}
.gameControls{
    padding: 20px;
    display: flex;
    flex-direction: column;
    gap: 30px;
    background-color: var(--mainBackground);
    border-radius: 10px;
    box-shadow: var(--shadow);
}
.grid {
    display: grid;
    grid-template-columns: repeat(10, 50px);
    grid-template-rows: repeat(10, 50px);
    gap: 2px;
    padding: 15px;
    border: 2px solid var(--blue);
    background-color: var(--mainBackground);
    border-radius: 10px;
    box-shadow: var(--shadow);
}
.cellComputer,.cellPlayer {
    position: relative;
}
.cellComputer, .cellPlayer {
    border: 1px solid var(--blue);
}
.cellComputer{
    cursor: pointer;
    background-color: transparent;
    transition: background-color 0.1s;
}
.cellComputer:hover{
    background-color: rgba(46, 46, 46, 0.4);
}
.cellPlayer.ship{
    position: relative;
}
.cellPlayer.ship::after{
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 55px; 
    font-weight: 500;
    content: "\2691";
    color: var(--blue);
}

#errorDisplay{
    border: 1px solid var(--blue);
    border-radius: 6px;
    width: 500px;
    padding: 15px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: var(--shadow);
}
.cellComputer.hit::before,
.cellPlayer.hit::before{
    position: absolute;
    content: "";
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 25px;
    height: 25px;
    border: 0px solid var(--blue);
    opacity: 0;
    border-radius: 50%;
    animation: growBorder 0.2s ease-in forwards; 
}

@keyframes growBorder {
    from {
        border-width: 0px;
        opacity: 0;
    }
    to {
        border-width: 5px;
        opacity: 1;
    }
}

.cellComputer.hit.ship::before,
.cellPlayer.hit.ship::before{
    position: absolute;
    content: "";
    font-size: 40px;
    width: 25px;
    height: 25px;
    background-color: red;
    border: none;
    border-radius: 50%;
    z-index: 1;
}

.winnerScreen{
    position: absolute;
    height: 100%;
    width: 100%;
    background-color: rgba(46, 46, 46, 0.7);
    display: none;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    gap: 20px;
    z-index: 2;
    border-radius: 10px;
    box-shadow: var(--shadow);
}

#winner {
    width: 400px;
    height: 50px;
    display: flex;
    background-color: var(--boxBackground);
    border-radius: 6px;
    align-items: center;
    justify-content: center;
    font-size: 30px;
}

.hoverInvalid,
.hover {
    position: relative;
    cursor: pointer;
}
.hover::before {
    cursor: pointer;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    content: "\2690";
    font-size: 55px; 
    color: var(--blue) ;
    text-align: center;
}
.hoverInvalid:after {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    content: '\2715';
    font-size: 50px; 
    font-weight: 700;
    color: red ;
    text-align: center;
}

.instructionsContainer{
    position: fixed;
    width: 100vw;
    height: 100vh;
    display: none;
    align-items: center;
    justify-content: center;
    background-color: rgba(46, 46, 46, 0.7);
    z-index: 4;
}
.instructions{
    background-color: var(--boxBackground);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    gap: 10px;
    padding: 20px;
    border-radius: 10px;
    box-shadow: var(--shadow);
    max-width: 800px;
}
.hollowFlag::before{
    content: "\2690";
    color: var(--blue);
    font-size: 30px;
    font-weight: 700;
}
.flag::before{
    content: "\2691";
    color: var(--blue);
    font-size: 30px;
    font-weight: 700;
}
.hollowCircle{
    position: relative;
}
.hollowCircle::before{
    position: absolute;
    content: "";
    top: -50%;
    left: -20px;
    transform: translate(-50%);
    width: 20px;
    height: 20px;
    border: 4px solid var(--blue);
    border-radius: 50%;
}
.circle{
    position: relative;
}
.circle::before{
    position: absolute;
    content: "";
    left: -20px;
    top: -20%;
    transform: translate(-50%);
    width: 20px;
    height: 20px;
    background-color: red;
    border: none;
    border-radius: 50%;
}
.cross::before{
    content: '\2715';
    color: red;
    font-size: 30px;
    font-weight: 700;
}
.playerGrid,
.computerGrid{
    position: relative;
}
.playerGrid::after{
    content: "Player's grid";
    position: absolute;
    top: -3%;
    left: 50%;
    transform: translate(-50%, -50%);
}
.computerGrid::after{
    content: "Computer's grid";
    position: absolute;
    top: -3%;
    left: 50%;
    transform: translate(-50%, -50%);
}

#switchOrientation{
    width: 90px;
}